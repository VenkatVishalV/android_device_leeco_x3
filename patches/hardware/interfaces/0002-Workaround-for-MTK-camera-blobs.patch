From c387cda8ac1378c42de775d65417ecc141d26841 Mon Sep 17 00:00:00 2001
From: danielhk <daniel.p6800@gmail.com>
Date: Sun, 3 Dec 2017 22:01:01 +0800
Subject: [PATCH 2/5] Workaround for MTK camera blobs

Oreo requires the user handle in sGetMemory callback. MTK camera blob
just use NULL.
As a workaround, save the user handle at open() for later use.
---
 camera/device/1.0/default/CameraDevice.cpp | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/camera/device/1.0/default/CameraDevice.cpp b/camera/device/1.0/default/CameraDevice.cpp
index 5bb97a4b..f2cad1b4 100644
--- a/camera/device/1.0/default/CameraDevice.cpp
+++ b/camera/device/1.0/default/CameraDevice.cpp
@@ -36,6 +36,8 @@ using ::android::hardware::graphics::common::V1_0::PixelFormat;
 
 HandleImporter CameraDevice::sHandleImporter;
 
+CameraDevice* sUser = nullptr;
+
 Status CameraDevice::getHidlStatus(const int& status) {
     switch (status) {
         case 0: return Status::OK;
@@ -361,7 +363,7 @@ CameraDevice::CameraHeapMemory::~CameraHeapMemory() {
 // shared memory methods
 camera_memory_t* CameraDevice::sGetMemory(int fd, size_t buf_size, uint_t num_bufs, void *user) {
     ALOGV("%s", __FUNCTION__);
-    CameraDevice* object = static_cast<CameraDevice*>(user);
+    CameraDevice* object = (user == nullptr)? sUser : static_cast<CameraDevice*>(user);
     if (object->mDeviceCallback == nullptr) {
         ALOGE("%s: camera HAL request memory while camera is not opened!", __FUNCTION__);
         return nullptr;
@@ -668,6 +670,7 @@ Return<Status> CameraDevice::open(const sp<ICameraDeviceCallback>& callback) {
     mDeviceCallback = callback;
 
     if (mDevice->ops->set_callbacks) {
+	sUser = this;
         mDevice->ops->set_callbacks(mDevice,
                 sNotifyCb, sDataCb, sDataCbTimestamp, sGetMemory, this);
     }
-- 
2.14.1

